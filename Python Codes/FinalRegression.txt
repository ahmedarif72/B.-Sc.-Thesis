# -*- coding: utf-8 -*-
"""
Created on Mon Aug 13 02:30:52 2018

@author: Sheikh Arif Ahmed
"""
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn import metrics
from sklearn.metrics import mean_squared_error
from sklearn.metrics import mean_absolute_error
from math import sqrt
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR
from sklearn import tree

# Importing the dataset
dataset = pd.read_csv('395 data scaled.csv')
X = dataset.iloc[:, 1:-2].values
y = dataset.iloc[:, 24].values

#---------spliting dataset into train test-------------------------
from sklearn.cross_validation import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 1/3.0, random_state = 0) 


#--------------list of regression algorithms-------------------------
REGRESSIORS = {
    "SVR": SVR(kernel='linear'),
    "Linear regression": LinearRegression(),
    "RandomForestRegressor": RandomForestRegressor(), 
    "Decision Tree Regressior": tree.DecisionTreeRegressor()
}
y_pred = dict()
rmse=dict()
mae= dict()

for name, regressior in REGRESSIORS.items():     
    regressior.fit(X_train, y_train)                    # fit() with instantiated object
    y_pred[name] = regressior.predict(X_test)
    mae[name]=mean_absolute_error(y_test,y_pred[name])
    rmse[name] =sqrt(mean_squared_error(y_test, y_pred[name]))



